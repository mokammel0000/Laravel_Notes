[Service] mean that a class that contains all about one task(eg. Notification Service). 
There is no framework in the world contains all the services u need
    (if it was existed, think about the it's size and complexity....!!!)
    eg. Laravel doesn't have any service that export data from excel sheets and product reports from it...
So, as a developer, it's attend that u will create the service what u need, and then add it to your project
So, u can do that in Laravel using service providers(مزود الخدمة).

Service providers are responsible for bootstrapping all of the framework's various components,
    such as the database, queue, validation, and routing components.
    All of the service providers for the application are configured in the config/app.php configuration file's providers array.

Laravel will iterate through this list of providers and instantiate each of them.
    After instantiating the providers,
    the register method will be called on all of the providers.
    Then, once all of the providers have been registered,
    the boot method will be called on each provider.
    This is so service providers may depend on every container binding being registered and available by the time their boot method is executed.

    Essentially every major feature offered by Laravel is bootstrapped and configured by a service provider. Since they bootstrap and configure so many features offered by the framework,
    service providers are the most important aspect of the entire Laravel bootstrap process.

------------------------------------------------------------------------------------------------------------
Service Provider: 
    Service providers are the central place of all Laravel application bootstrapping.
    Service providers are the central place to configure your application.
    Laravel Integrate [all services that's included in the project] using Service Provider:
        All services in the project: 
            -laravel own services, 
                like(Service Container,Bindings, Middleware, Event Listeners, Routes, 
                    Notification, Blades, Error Handling, Logging, Mails, Sessions, Caching, Views)
        
            -Any outer package must include it's service provider to inform laravel how to include it in the project.
            (what is it's structure, and what is the services it will provide to the project).


            -If u want to add a your own service, u should use service provider to do that(like ViewServiceProvider).
                (after create it, add it to the config/app file)


The providers array in the config/app file contains
    [All of the service provider classes that will be loaded for your application.]
    
        
------------------------------------------------------------------------------------------------------------
Artisan Commands: 
    php artisan make:provider ViewServiceProvider